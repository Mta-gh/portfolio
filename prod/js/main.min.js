const tiltEffectSettings={max:10,perspective:1e3,scale:1,speed:500,easing:"cubic-bezier(.03,.98,.52,.99)"},cards=document.querySelectorAll(".tilt-card");function cardMouseEnter(t){setTransition(t)}function cardMouseMove(t){const e=t.currentTarget;var i=e.getBoundingClientRect(),s=e.offsetWidth,n=e.offsetHeight,c=i.left+s/2,i=i.top+n/2,c=t.clientX-c,t=t.clientY-i,i=+tiltEffectSettings.max*t/(n/2),t=-1*tiltEffectSettings.max*c/(s/2),n=i<-tiltEffectSettings.max?-tiltEffectSettings:i>tiltEffectSettings.max?tiltEffectSettings.max:i,c=t<-tiltEffectSettings.max?-tiltEffectSettings:t>tiltEffectSettings.max?tiltEffectSettings.max:t;e.style.transform=`perspective(${tiltEffectSettings.perspective}px) rotateX(${n}deg) rotateY(${c}deg) scale3D(${tiltEffectSettings.scale}, ${tiltEffectSettings.scale}, ${tiltEffectSettings.scale})`}function cardMouseLeave(t){t.currentTarget.style.transform=`perspective(${tiltEffectSettings.perspective}px) rotateX(0deg) rotateY(0deg) scale3D(1, 1, 1)`,setTransition(t)}function setTransition(t){const e=t.currentTarget;clearTimeout(e.transitionTimeoutId),e.style.transition=`transform ${tiltEffectSettings.speed}ms `+tiltEffectSettings.easing,e.transitionTimeoutId=setTimeout(()=>{e.style.transition=""},tiltEffectSettings.speed)}cards.forEach(t=>{t.addEventListener("mouseenter",cardMouseEnter),t.addEventListener("mousemove",cardMouseMove),t.addEventListener("mouseleave",cardMouseLeave)});